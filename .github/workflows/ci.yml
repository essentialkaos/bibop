name: CI (Push)

on:
  workflow_call:

permissions:
  actions: read
  contents: read
  statuses: write

jobs:
  Go:
    name: Go
    runs-on: ubuntu-latest

    strategy:
      matrix:
        go: [ '1.21.x', '1.22.x' ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Download dependencies
        run: make deps

      - name: Build binary
        run: make all

      - name: Run tests
        run: go test -covermode=count ./parser ./recipe -coverprofile=cover.out

      - name: Send coverage data to Coveralls
        uses: essentialkaos/goveralls-action@v2
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          profile: cover.out
          parallel: true
          flag-name: linux-${{ matrix.go }}

      - name: Send coverage data to Codacy
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: |
          bash <(curl -Ls https://coverage.codacy.com/get.sh) report \
          --force-coverage-parser go \
          -r cover.out \
          --partial

  SendCoverage:
    name: Send Coverage
    runs-on: ubuntu-latest
    if: success() || failure()

    needs: Go

    steps:
      - name: Finish parallel tests (Coveralls)
        uses: essentialkaos/goveralls-action@v2
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          parallel-finished: true

      - name: Finish parallel tests (Codacy)
        env:
          CODACY_PROJECT_TOKEN: ${{ secrets.CODACY_PROJECT_TOKEN }}
        run: bash <(curl -Ls https://coverage.codacy.com/get.sh) final

  Aligo:
    name: Aligo
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21.x'

      - name: Download dependencies
        run: make deps

      - name: Check Golang sources with Aligo
        uses: essentialkaos/aligo-action@v2
        with:
          files: ./...

  Shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check scripts with Shellcheck
        uses: essentialkaos/shellcheck-action@v1
        with:
          files: scripts/bibop-dep scripts/bibop-docker scripts/bibop-entrypoint scripts/bibop-libtest-gen scripts/bibop-linked scripts/bibop-massive scripts/bibop-multi-check scripts/bibop-so-exported

  Hadolint:
    name: Hadolint
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check dockerfiles with Hadolint
        uses: essentialkaos/hadolint-action@v1
        with:
          files: .docker/ol8.docker .docker/ol9.docker

  Typos:
    name: Typos
    runs-on: ubuntu-latest

    needs: Go

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Check spelling
        continue-on-error: true
        uses: crate-ci/typos@master
