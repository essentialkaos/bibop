name: CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master]
  schedule:
    - cron: '0 14 */15 * *'

jobs:
  Go:
    name: Go
    runs-on: ubuntu-latest

    env:
      SRC_DIR: src/github.com/${{ github.repository }}

    strategy:
      matrix:
        go: [ '1.15.x', '1.16.x' ]

    steps:
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}
        id: go

      - name: Setup PATH
        run: |
          echo "GOPATH=${{ github.workspace }}" >> "$GITHUB_ENV"
          echo "GOBIN=${{ github.workspace }}/bin" >> "$GITHUB_ENV"
          echo "${{ github.workspace }}/bin" >> "$GITHUB_PATH"

      - name: Checkout
        uses: actions/checkout@v2
        with:
          path: ${{env.SRC_DIR}}

      - name: Download dependencies
        working-directory: ${{env.SRC_DIR}}
        run: make deps deps-test

      - name: Build binary
        working-directory: ${{env.SRC_DIR}}
        run: make all

      - name: Run tests
        working-directory: ${{env.SRC_DIR}}
        run: go test -covermode=count ./parser ./recipe -coverprofile=cover.out

      - name: Install goveralls
        env:
          GO111MODULE: off
        run: go get -v github.com/mattn/goveralls

      - name: Send coverage to Coveralls
        working-directory: ${{env.SRC_DIR}}
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -service github -coverprofile cover.out

      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '10.x'

      - name: Install codeclimate-test-reporter
        run: npm install -g codeclimate-test-reporter

      - name: Send coverage to Codebeat
        working-directory: ${{env.SRC_DIR}}
        env:
          CODECLIMATE_API_HOST: https://codebeat.co/webhooks/code_coverage
          CODECLIMATE_REPO_TOKEN: ${{ secrets.CODECLIMATE_TOKEN }}
        run: codeclimate-test-reporter < cover.out

  Shellcheck:
    name: Shellcheck
    runs-on: ubuntu-latest

    needs: Go

    env:
      SHELLCHECK_VERSION: 0.7.1

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Shellcheck
        run: |
          wget https://github.com/koalaman/shellcheck/releases/download/v${SHELLCHECK_VERSION}/shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz
          tar xf shellcheck-v${SHELLCHECK_VERSION}.linux.x86_64.tar.xz
          mv shellcheck-v${SHELLCHECK_VERSION} shellcheck-latest

      - name: Print Shellcheck version info
        run: ./shellcheck-latest/shellcheck --version

      - name: Check scripts
        run: |
          bash -c 'shopt -s globstar; ./shellcheck-latest/shellcheck bibop-docker'
          bash -c 'shopt -s globstar; ./shellcheck-latest/shellcheck bibop-entrypoint'
          bash -c 'shopt -s globstar; ./shellcheck-latest/shellcheck bibop-massive'
          bash -c 'shopt -s globstar; ./shellcheck-latest/shellcheck bibop-multi-check'

  Hadolint:
    name: Hadolint
    runs-on: ubuntu-latest

    needs: Go

    env:
      HADOLINT_VERSION: 1.18.2

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Hadolint
        run: |
          wget -O hadolint https://github.com/hadolint/hadolint/releases/download/v${HADOLINT_VERSION}/hadolint-Linux-x86_64
          chmod +x hadolint
      
      - name: Print Hadolint version info
        run: ./hadolint --version

      - name: Check Docker files
        run: |
          ./hadolint centos7.docker
